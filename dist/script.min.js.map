{"version":3,"sources":["script.js"],"names":["board","currentPlayer","document","getElementById","gameActive","querySelectorAll","checkWinner","some","pattern","winPatterns","index","restartGame","textContent","cell","cells","forEach","addEventListener","getAttribute","every","statusDisplay","concat"],"mappings":"aAAA,IAAIA,MAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,cAAgB,IADhBD,YAAa,EACbC,cAAgBC,SAApBC,eAAA,UACIC,MAAUF,SAAdG,iBAAA,SAmBO,SAAAC,cAML,MALG,CAfH,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GADF,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAwBI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,IAFdC,KAAA,SAAAC,GAIF,OAAOC,EAAAA,MAAA,SAAAC,GAAiB,OAAAV,MAAAQ,KAAWP,kBAElC,SAFDU,cAGDX,MAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAICC,cAAgB,IAFlBG,YAASO,EACPX,cAAaY,YAAL,kBACRX,MAAAA,QAAa,SAAAY,GAAG,OAAhBA,EAAAD,YAAA,KAnCFE,MAAMA,QAAQZ,SAAAA,GAEdY,EAAMC,iBAAQF,QAAQ,WACpBA,IAAKG,EAAAA,EAALC,aAA+B,cACVA,KAAbP,MAAKA,IAAQO,aAEjBjB,MAAMU,GAAST,cADjBY,EAAIb,YAAiBC,cACnBD,eACAa,cAAAD,YAAAC,UAAAA,OAAAZ,cAAAY,UAGET,YAAa,GAFXE,MAAJY,MAAmB,SAAAL,GAAA,MAAA,KAAAA,KACjBM,cAAcP,YAAd,eACAR,YAAa,IACYH,cAAA,MAAaA,cAAb,IAAA,IAApBkB,cAAsCP,YAAtC,UAAAQ,OAAsCnB,cAAtC","file":"script.min.js","sourcesContent":["let board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet currentPlayer = \"X\";\r\nlet gameActive = true;\r\nconst statusDisplay = document.getElementById(\"status\");\r\nconst cells = document.querySelectorAll(\".cell\");\r\n\r\ncells.forEach(cell => {\r\n  cell.addEventListener(\"click\", () => {\r\n    const index = cell.getAttribute(\"data-index\");\r\n    if (board[index] === \"\" && gameActive) {\r\n      board[index] = currentPlayer;\r\n      cell.textContent = currentPlayer;\r\n      if (checkWinner()) {\r\n        statusDisplay.textContent = `Player ${currentPlayer} Wins!`;\r\n        gameActive = false;\r\n      } else if (board.every(cell => cell !== \"\")) {\r\n        statusDisplay.textContent = \"It's a Draw!\";\r\n        gameActive = false;\r\n      } else {\r\n        currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n        statusDisplay.textContent = `Player ${currentPlayer}'s Turn`;\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\nfunction checkWinner() {\r\n  const winPatterns = [\r\n    [0,1,2], [3,4,5], [6,7,8],\r\n    [0,3,6], [1,4,7], [2,5,8],\r\n    [0,4,8], [2,4,6]\r\n  ];\r\n  return winPatterns.some(pattern => {\r\n    return pattern.every(index => board[index] === currentPlayer);\r\n  });\r\n}\r\n\r\nfunction restartGame() {\r\n  board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n  currentPlayer = \"X\";\r\n  gameActive = true;\r\n  statusDisplay.textContent = \"Player X's Turn\";\r\n  cells.forEach(cell => cell.textContent = \"\");\r\n}\r\n"]}